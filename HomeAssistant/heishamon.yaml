################################################################
## Packages / Heishamon
################################################################

################################################################
## Changelog
################################################################
##
## 1.0.0 (08-01-2020)
##   Added
##   - Initial version
##
## 1.1.0 (10-01-2020)
##   Added
##   - Added power switch and Fan RPM sensors
##
## 1.2.0 (17-05-2020)
##   Fixed
##   - New/changed topics
##
## 2.0.0 (20-01-2021)
##   Added
##   - Adjusted to GoHeishaMon
##   - HA Discovery enabled sensors removed


# Automations #
###############
automation:
  #Fetches quiet level from status and sets the selector accordingly
  - alias: Set quiet level selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/Quiet_Mode_Level"
    action:
      service: input_select.select_option
      data_template:
        entity_id: input_select.aquarea_quiet_mode
        option: "{{ trigger.payload }}"
  #Sets quiet level to the selected value
  - alias: Set quiet level
    trigger:
      platform: state
      entity_id: input_select.aquarea_quiet_mode
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/Quiet_Mode_Level/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: "{{ states('input_select.aquarea_quiet_mode') }}"
  
  #Fetches powerful level from status and sets the selector accordingly
  - alias: Set powerful level selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/Powerful_Mode_Time"
    action:
      service: input_select.select_option
      data_template:
        entity_id: input_select.aquarea_powerful_mode
        option: "{{ trigger.payload }}"
  #Sets powerful level to the selected value
  - alias: Set powerful level
    trigger:
      platform: state
      entity_id: input_select.aquarea_powerful_mode
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/Powerful_Mode_Time/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: "{{ states('input_select.aquarea_powerful_mode') }}"
  
  #Fetches operating mode from status and sets the selector accordingly
  - alias: Set operating mode selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/Operating_Mode_State"
    action:
      service: input_select.select_option
      data_template:
        entity_id: input_select.aquarea_operating_mode
        option: "{{ trigger.payload }}"
  #Sets heatmode to the selected value
  - alias: Set operating mode
    trigger:
      platform: state
      entity_id: input_select.aquarea_operating_mode
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/Operating_Mode_State/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: "{{ states('input_select.aquarea_operating_mode') }}"
  
  - alias: Set zones state selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/Zones_State"
    action:
      service: input_select.select_option
      data_template:
        entity_id: input_select.aquarea_zones
        option: "{{ trigger.payload }}"
  - alias: Set zones state
    trigger:
      platform: state
      entity_id: input_select.aquarea_zones
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/Zones_State/set
        retain: false
        payload_template: "{{ states('input_select.aquarea_zones') }}"
  
  #Fetches heatshift temperature from status and sets the selector accordingly
  - alias: Set heat offset selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/Z1_Heat_Request_Temp"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.aquarea_heat_offset
        value: >-
          {{ "%.1f" % (trigger.payload | int) }}
  #Sets heatshift temperature to the selected value
  - alias: Set heat offset
    trigger:
      platform: state
      entity_id: input_number.aquarea_heat_offset
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/Z1_Heat_Request_Temp/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: >-
          {{ "%.0f" % (states('input_number.aquarea_heat_offset') | int) }}
  
  #Fetches tank target temperature from status and sets the selector accordingly
  - alias: Set tank target temperature selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/DHW_Target_Temp"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.aquarea_tank_temp
        value: >-
          {{ "%.1f" % (trigger.payload | int) }}
  #Sets tank target temperature to the selected value
  - alias: Set tank target temperature
    trigger:
      platform: state
      entity_id: input_number.aquarea_tank_temp
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/DHW_Target_Temp/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: >-
          {{ "%.0f" % (states('input_number.aquarea_tank_temp') | int) }}
  
  #Fetches cooling offset temperature from status and sets the selector accordingly
  - alias: Set cooling offset temperature selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/Z1_Cool_Request_Temp"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.aquarea_cool_offset
        value: >-
          {{ "%.1f" % (trigger.payload | int) }}
  #Sets cooling offset temperature to the selected value
  - alias: Set cooling offset temperature
    trigger:
      platform: state
      entity_id: input_number.aquarea_cool_offset
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/Z1_Cool_Request_Temp/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: >-
          {{ "%.0f" % (states('input_number.aquarea_cool_offset') | int) }}
  
  #Fetches heating delta temperature from status and sets the selector accordingly
  - alias: Set heating delta temperature selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/Heat_Delta"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.aquarea_heat_delta
        value: >-
          {{ "%.1f" % (trigger.payload | int) }}
  #Sets heating delta temperature to the selected value
  - alias: Set heating delta temperature
    trigger:
      platform: state
      entity_id: input_number.aquarea_heat_delta
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/Heat_Delta/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: >-
          {{ "%.0f" % (states('input_number.aquarea_heat_delta') | int) }}
  
  #Fetches cooling delta temperature from status and sets the selector accordingly
  - alias: Set cooling delta temperature selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/Cool_Delta"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.aquarea_cool_delta
        value: >-
          {{ "%.1f" % (trigger.payload | int) }}
  #Sets cooling delta temperature to the selected value
  - alias: Set cooling delta temperature
    trigger:
      platform: state
      entity_id: input_number.aquarea_cool_delta
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/Cool_Delta/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: >-
          {{ "%.0f" % (states('input_number.aquarea_cool_delta') | int) }}
  
  #Fetches tank delta temperature from status and sets the selector accordingly
  - alias: Set tank delta temperature selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/DHW_Heat_Delta"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.aquarea_dhw_delta
        value: >-
          {{ "%.1f" % (trigger.payload | int) }}
  #Sets tank delta temperature to the selected value
  - alias: Set tank delta temperature
    trigger:
      platform: state
      entity_id: input_number.aquarea_dhw_delta
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/DHW_Heat_Delta/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: >-
          {{ "%.0f" % (states('input_number.aquarea_dhw_delta') | int) }}

# new automations
  - alias: Set tank holiday shift temperature selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/DHW_Holiday_Shift_Temp"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.aquarea_dhw_holiday_shift_temp
        value: >-
          {{ "%.1f" % (trigger.payload | int) }}
  - alias: Set tank holiday shift temperature
    trigger:
      platform: state
      entity_id: input_number.aquarea_dhw_holiday_shift_temp
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/DHW_Holiday_Shift_Temp/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: >-
          {{ "%.0f" % (states('input_number.aquarea_dhw_holiday_shift_temp') | int) }}

  - alias: Set room holiday shift temperature selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/Room_Holiday_Shift_Temp"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.aquarea_room_holiday_shift_temp
        value: >-
          {{ "%.1f" % (trigger.payload | int) }}
  - alias: Set room holiday shift temperature
    trigger:
      platform: state
      entity_id: input_number.aquarea_room_holiday_shift_temp
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/Room_Holiday_Shift_Temp/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: >-
          {{ "%.0f" % (states('input_number.aquarea_room_holiday_shift_temp') | int) }}

  - alias: Set sterilization temperature selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/Sterilization_Temp"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.aquarea_sterilization_temp
        value: >-
          {{ "%.1f" % (trigger.payload | int) }}
  - alias: Set sterilization temperature
    trigger:
      platform: state
      entity_id: input_number.aquarea_sterilization_temp
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/Sterilization_Temp/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: >-
          {{ "%.0f" % (states('input_number.aquarea_sterilization_temp') | int) }}

  - alias: Set sterilization max time selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/Sterilization_Max_Time"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.aquarea_sterlization_max_time
        value: >-
          {{ "%.1f" % (trigger.payload | int) }}
  - alias: Set sterilization max time
    trigger:
      platform: state
      entity_id: input_number.aquarea_sterlization_max_time
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/Sterilization_Max_Time/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: >-
          {{ "%.0f" % (states('input_number.aquarea_sterlization_max_time') | int) }}

  - alias: Set heating off outdoor temp selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/Heating_Off_Outdoor_Temp"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.aquarea_heating_off_outdoor_temp
        value: >-
          {{ "%.1f" % (trigger.payload | int) }}
  - alias: Set heating off outdoor temp
    trigger:
      platform: state
      entity_id: input_number.aquarea_heating_off_outdoor_temp
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/Heating_Off_Outdoor_Temp/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: >-
          {{ "%.0f" % (states('input_number.aquarea_heating_off_outdoor_temp') | int) }}

  - alias: Set heater on outdoor temp selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/Heater_On_Outdoor_Temp"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.aquarea_heater_on_outdoor_temp
        value: >-
          {{ "%.1f" % (trigger.payload | int) }}
  - alias: Set heater on outdoor temp
    trigger:
      platform: state
      entity_id: input_number.aquarea_heater_on_outdoor_temp
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/Heater_On_Outdoor_Temp/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: >-
          {{ "%.0f" % (states('input_number.aquarea_heater_on_outdoor_temp') | int) }}

  - alias: Set heat to cool temp selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/Heat_To_Cool_Temp"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.aquarea_heat_to_cool_temp
        value: >-
          {{ "%.1f" % (trigger.payload | int) }}
  - alias: Set heat to cool temp
    trigger:
      platform: state
      entity_id: input_number.aquarea_heat_to_cool_temp
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/Heat_To_Cool_Temp/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: >-
          {{ "%.0f" % (states('input_number.aquarea_heat_to_cool_temp') | int) }}

  - alias: Set cool to heat temp selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/Cool_To_Heat_Temp"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.aquarea_cool_to_heat_temp
        value: >-
          {{ "%.1f" % (trigger.payload | int) }}
  - alias: Set cool to heat temp
    trigger:
      platform: state
      entity_id: input_number.aquarea_cool_to_heat_temp
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/Cool_To_Heat_Temp/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: >-
          {{ "%.0f" % (states('input_number.aquarea_cool_to_heat_temp') | int) }}

  - alias: Set SG ready capacity 1 heat selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/SGReady_Capacity1_Heat"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.aquarea_sgready_capacity1_heat
        value: >-
          {{ "%.1f" % (trigger.payload | int) }}
  - alias: Set SG ready capacity 1 heat
    trigger:
      platform: state
      entity_id: input_number.aquarea_sgready_capacity1_heat
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/SGReady_Capacity1_Heat/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: >-
          {{ "%.0f" % (states('input_number.aquarea_sgready_capacity1_heat') | int) }}

  - alias: Set SG ready capacity 1 DHW selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/SGReady_Capacity1_DHW"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.aquarea_sgready_capacity1_dhw
        value: >-
          {{ "%.1f" % (trigger.payload | int) }}
  - alias: Set SG ready capacity 1 DHW
    trigger:
      platform: state
      entity_id: input_number.aquarea_sgready_capacity1_dhw
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/SGReady_Capacity1_DHW/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: >-
          {{ "%.0f" % (states('input_number.aquarea_sgready_capacity1_dhw') | int) }}

  - alias: Set SG ready capacity 2 heat selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/SGReady_Capacity2_Heat"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.aquarea_sgready_capacity2_heat
        value: >-
          {{ "%.1f" % (trigger.payload | int) }}
  - alias: Set SG ready capacity 2 heat
    trigger:
      platform: state
      entity_id: input_number.aquarea_sgready_capacity2_heat
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/SGReady_Capacity2_Heat/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: >-
          {{ "%.0f" % (states('input_number.aquarea_sgready_capacity2_heat') | int) }}

  - alias: Set SG ready capacity 2 DHW selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/SGReady_Capacity2_DHW"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.aquarea_sgready_capacity2_dhw
        value: >-
          {{ "%.1f" % (trigger.payload | int) }}
  - alias: Set SG ready capacity 2 DHW
    trigger:
      platform: state
      entity_id: input_number.aquarea_sgready_capacity2_dhw
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/SGReady_Capacity2_DHW/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: >-
          {{ "%.0f" % (states('input_number.aquarea_sgready_capacity2_dhw') | int) }}

  - alias: Set DHW heatup time selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/DHW_Heatup_Time"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.aquarea_dhw_heatup_time
        value: >-
          {{ "%.1f" % (trigger.payload | int) }}
  - alias: Set DHW heatup time
    trigger:
      platform: state
      entity_id: input_number.aquarea_dhw_heatup_time
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/DHW_Heatup_Time/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: >-
          {{ "%.0f" % (states('input_number.aquarea_dhw_heatup_time') | int) }}

  - alias: Set DHW room max time selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/DHW_Room_Max_Time"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.aquarea_room_max_time
        value: >-
          {{ "%.1f" % (trigger.payload | int) }}
  - alias: Set DHW room max time
    trigger:
      platform: state
      entity_id: input_number.aquarea_room_max_time
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/DHW_Room_Max_Time/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: >-
          {{ "%.0f" % (states('input_number.aquarea_room_max_time') | int) }}

  - alias: Set maximum pump speed selector
    trigger:
      platform: mqtt
      topic: "panasonic_heat_pump/main/Maximum_Pump_Speed"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.aquarea_maximum_pump_speed
        value: >-
          {{ "%.1f" % (trigger.payload | int) }}
  - alias: Set maximum pump speed
    trigger:
      platform: state
      entity_id: input_number.aquarea_maximum_pump_speed
    action:
      service: mqtt.publish
      data_template:
        topic: panasonic_heat_pump/main/Maximum_Pump_Speed/set
        retain: false #IMPORTANT! ALWAYS set retain flag false for commands!
        payload_template: >-
          {{ "%.0f" % (states('input_number.aquarea_maximum_pump_speed') | int) }}

# input_number #
################
input_number:
  aquarea_tank_temp:
    name: Tank Target Temperature
    unit_of_measurement: °C
    mode: box
    min: 40
    max: 65
    step: 1

  aquarea_heat_offset:
    name: Heat Request Temperature
    unit_of_measurement: °C
    mode: box
    min: -5
    max: 5
    step: 1

  aquarea_cool_offset:
    name: Cool Request Temperature
    unit_of_measurement: °C
    mode: box
    min: -5
    max: 5
    step: 1

  aquarea_heat_delta:
    name: Heating Delta
    unit_of_measurement: °C
    mode: box
    min: 1
    max: 15
    step: 1

  aquarea_cool_delta:
    name: Cooling Delta
    unit_of_measurement: °C
    mode: box
    min: 1
    max: 15
    step: 1

  aquarea_dhw_delta:
    name: DHW Delta
    unit_of_measurement: °C
    mode: box
    min: -12
    max: -2
    step: 1

  # new-------------------
  aquarea_dhw_holiday_shift_temp:
    name: DHW Holiday Shift Temp
    unit_of_measurement: °C
    mode: box
    min: -25
    max: 15
    step: 1

  aquarea_room_holiday_shift_temp:
    name: Room Holiday Shift Temp
    unit_of_measurement: °C
    mode: box
    min: -25
    max: 15
    step: 1

  aquarea_sterilization_temp:
    name: Sterilization Temp
    unit_of_measurement: °C
    mode: box
    min: 55
    max: 75
    step: 1

  aquarea_sterlization_max_time:
    name: Sterilization Max Time
    unit_of_measurement: min
    mode: box
    min: 5
    max: 60
    step: 5

  aquarea_heating_off_outdoor_temp:
    name: Heating Off Outdoor Temp
    unit_of_measurement: °C
    mode: box
    min: 5
    max: 35
    step: 1

  aquarea_heater_on_outdoor_temp:
    name: Heater On Outdoor Temp
    unit_of_measurement: °C
    mode: box
    min: -15
    max: 20
    step: 1

  aquarea_heat_to_cool_temp:
    name: Heat to Cool Temp
    unit_of_measurement: °C
    mode: box
    min: 5
    max: 25
    step: 1

  aquarea_cool_to_heat_temp:
    name: Cool to Heat Temp
    unit_of_measurement: °C
    mode: box
    min: 5
    max: 25
    step: 1

  aquarea_sgready_capacity1_heat:
    name: SGReady Capacity1 Heat
    unit_of_measurement: '%'
    mode: box
    min: 50
    max: 150
    step: 5

  aquarea_sgready_capacity1_dhw:
    name: SGReady Capacity1 DHW
    unit_of_measurement: '%'
    mode: box
    min: 50
    max: 150
    step: 5

  aquarea_sgready_capacity2_heat:
    name: SGReady Capacity2 Heat
    unit_of_measurement: '%'
    mode: box
    min: 50
    max: 150
    step: 5

  aquarea_sgready_capacity2_dhw:
    name: SGReady Capacity2 DHW
    unit_of_measurement: '%'
    mode: box
    min: 50
    max: 150
    step: 5

  aquarea_dhw_heatup_time:
    name: DHW Heatup Time
    unit_of_measurement: min
    mode: box
    min: 5
    max: 240
    step: 5

  aquarea_room_max_time:
    name: DHW Room Max Time
    unit_of_measurement: min
    mode: box
    min: 30
    max: 600
    step: 30
    
  aquarea_maximum_pump_speed:
    name: Maximum Pump Speed
    mode: box
    min: 64
    max: 254
    step: 1

# input_select #
################
input_select:
  aquarea_quiet_mode:
    name: Quiet Mode
    options:
      - "Off"
      - "Level 1"
      - "Level 2"
      - "Level 3"

  aquarea_powerful_mode:
    name: Powerful Mode
    options:
      - "Off"
      - "30 min"
      - "60 min"
      - "90 min"

  aquarea_operating_mode:
    name: Operating Mode
    options:
      - "Heat"
      - "Cool"
      - "Auto(heat)"
      - "DHW"
      - "Heat+DHW"
      - "Cool+DHW"
      - "Auto(heat)+DHW"

  aquarea_zones:
    name: Zones State
    options:
      - "Zone1 active"
      - "Zone2 active"
      - "Zone1 and zone2 active"

# sensor #
##########
sensor:
  #### SENSORS BELOW ARE NOT IN FIRMWARE ####
  #Energy use/production
  - platform: template
    sensors:
      aquarea_energy_production:
        friendly_name: "Aquarea Energy Production"
        unit_of_measurement: "W"
        value_template: >-
          {% if states('sensor.dhw_energy_production') != "0" %}
            {{ states('sensor.dhw_energy_production') }}
          {% elif states('sensor.cool_energy_production') != "0" %}
            {{ states('sensor.cool_energy_production') }}
          {% else %}
            {{ states('sensor.heat_energy_production') }}
          {% endif %}
      aquarea_energy_consumption:
        friendly_name: "Aquarea Energy Consumption"
        unit_of_measurement: "W"
        value_template: >-
          {% if states('sensor.dhw_energy_consumption') != "0" %}
            {{ states('sensor.dhw_energy_consumption') }}
          {% elif states('sensor.cool_energy_consumption') != "0" %}
            {{ states('sensor.cool_energy_consumption') }}
          {% else %}
            {{ states('sensor.heat_energy_consumption') }}
          {% endif %}
  #COP Calculations
  - platform: template
    sensors:
      aquarea_cop:
        friendly_name: "Aquarea COP"
        unit_of_measurement: "x"
        value_template: >-
          {% if states('sensor.aquarea_energy_production') != "Unknown" %}
            {% if states('sensor.aquarea_energy_consumption') > "0" %}
              {{ '%0.1f' % ((states('sensor.aquarea_energy_production') | float ) / (states('sensor.aquarea_energy_consumption') | float)) }}
            {% else %}
              0.0
            {% endif %}
          {% else %}
            unavailable
          {% endif %}

# switch #
##########
switch:
#Turn on/off holiday mode
  - platform: mqtt
    name: Set Holiday Mode
    availability_topic: "panasonic_heat_pump/LWT"
    command_topic: "panasonic_heat_pump/main/Holiday_Mode_State/set"
    state_topic: "panasonic_heat_pump/main/Holiday_Mode_State"
    qos: 0
    payload_on: "1"
    payload_off: "0"
    state_on: "On"
    state_off: "Off"
    value_template: >-
      {% if value == "Off" %}
        Off
      {% elif value == "Active" or value == "Scheduled" %}
        On
      {% endif %}
    retain: false
